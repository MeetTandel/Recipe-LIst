{"version":3,"sources":["components/Ingredients/Ingredient.js","components/Ingredients/IngredientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeEdit/RecipeIngredientEdit.js","components/RecipeEdit/RecipeEdit.js","App.js","index.js"],"names":["Ingredient","name","amount","IngredientList","ingredientElements","ingredients","map","ingredient","id","className","Recipe","props","useContext","RecipeContext","handleRecipeDelete","handleRecipeSelect","servings","cookTime","instructions","onClick","RecipeList","recipes","handleRecipeAdd","recipe","RecipeIngredientEdit","handleIngredientChange","handleIngredientDelete","handleChange","changes","onChange","e","target","value","type","RecipeEdit","handleRecipeChange","newIngredients","index","findIndex","i","filter","undefined","htmlFor","min","parseInt","newIngredient","uuidv4","handleIngredientAdd","React","createContext","LOCAL_STORAGE_KEY","sampleRecipes","App","useState","setRecipes","selectedRecipeId","setSelectedRecipeId","selectedRecipe","find","useEffect","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContextValue","newRecipe","newRecipes","r","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEe,SAASA,EAAT,GAAqC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,OACtC,OACI,qCACI,+BAAOD,IACP,+BAAOC,OCHJ,SAASC,EAAT,GAAwC,IAC9CC,EAD6C,EAAdC,YACEC,KAAI,SAAAC,GACvC,OAAO,cAACP,EAAD,eAAoCO,GAAnBA,EAAWC,OAEtC,OACI,qBAAKC,UAAU,kBAAf,SACKL,ICLE,SAASM,EAAOC,GAC3B,MAAmDC,qBAAWC,GAAtDC,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,mBACpBP,EAA4DG,EAA5DH,GAAIP,EAAwDU,EAAxDV,KAAMe,EAAkDL,EAAlDK,SAAUC,EAAwCN,EAAxCM,SAAUC,EAA8BP,EAA9BO,aAAcb,EAAgBM,EAAhBN,YAEpD,OACI,sBAAKI,UAAU,SAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,gBAAd,SAA+BR,IAC/B,gCACI,wBACIQ,UAAU,wBACVU,QAAS,kBAAMJ,EAAmBP,IAFtC,kBAIA,wBACIW,QAAS,kBAAML,EAAmBN,IAClCC,UAAU,kBAFd,0BAKR,sBAAKA,UAAU,cAAf,UACI,sBAAMA,UAAU,gBAAhB,wBACA,sBAAMA,UAAU,gBAAhB,SAAiCQ,OAErC,sBAAKR,UAAU,cAAf,UACI,sBAAMA,UAAU,gBAAhB,uBACA,sBAAMA,UAAU,gBAAhB,SAAiCO,OAErC,sBAAKP,UAAU,cAAf,UACI,sBAAMA,UAAU,gBAAhB,2BACA,qBAAKA,UAAU,6DAAf,SACKS,OAGT,sBAAKT,UAAU,cAAf,UACI,sBAAMA,UAAU,gBAAhB,0BACA,qBAAKA,UAAU,gBAAf,SACI,cAACN,EAAD,CAAgBE,YAAaA,YCnClC,SAASe,IACpB,MAAqCR,qBAAWC,GAAxCQ,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OACI,mCACI,sBAAKb,UAAU,cAAf,UACKY,EAAQf,KAAI,SAAAiB,GACT,OACI,cAACb,EAAD,eAEQa,GADCA,EAAOf,OAKxB,qBAAKC,UAAU,wCAAf,SACI,wBACIU,QAASG,EACTb,UAAU,mBAFd,+BChBL,SAASe,EAAT,GAA+F,IAA/DC,EAA8D,EAA9DA,uBAAwBC,EAAsC,EAAtCA,uBAAwBnB,EAAc,EAAdA,WAE3F,SAASoB,EAAaC,GAClBH,EAAuBlB,EAAWC,GAAZ,YAAC,eAAoBD,GAAeqB,IAG9D,OACI,qCACI,uBACInB,UAAU,qBACVoB,SAAU,SAAAC,GAAC,OAAIH,EAAa,CAAE1B,KAAM6B,EAAEC,OAAOC,SAC7CA,MAAOzB,EAAWN,KAClBgC,KAAK,SAET,uBACIxB,UAAU,qBACVuB,MAAOzB,EAAWL,OAClB2B,SAAU,SAAAC,GAAC,OAAIH,EAAa,CAAEzB,OAAQ4B,EAAEC,OAAOC,SAC/CC,KAAK,SAET,wBACAd,QAAS,kBAAMO,EAAuBnB,EAAWC,KAC7CC,UAAU,kBAFd,qB,YCjBG,SAASyB,EAAT,GAAiC,IAAXX,EAAU,EAAVA,OACzBf,EAA4De,EAA5Df,GAAIP,EAAwDsB,EAAxDtB,KAAMgB,EAAkDM,EAAlDN,SAAUD,EAAwCO,EAAxCP,SAAUE,EAA8BK,EAA9BL,aAAcb,EAAgBkB,EAAhBlB,YACpD,EAAmDO,qBAAWC,GAAtDsB,EAAR,EAAQA,mBAAoBpB,EAA5B,EAA4BA,mBAE5B,SAASY,EAAaC,GAClBO,EAAmB3B,EAAD,YAAC,eAASe,GAAWK,IAG3C,SAASH,EAAuBjB,EAAID,GAChC,IAAM6B,EAAc,YAAOb,EAAOlB,aAC5BgC,EAAQD,EAAeE,WAAU,SAAAC,GAAC,OAAIA,EAAE/B,KAAOA,KACrD4B,EAAeC,GAAS9B,EACxBoB,EAAa,CAAEtB,YAAa+B,IAalC,SAASV,EAAuBlB,GAC1BmB,EAAa,CAACtB,YAAakB,EAAOlB,YAAYmC,QAAO,SAAAD,GAAC,OAAIA,EAAE/B,KAAOA,OAEvE,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,wBACIU,QAAS,kBAAMJ,OAAmB0B,IAClChC,UAAU,iCAFd,oBAGJ,sBAAKA,UAAU,4BAAf,UACI,uBACIiC,QAAQ,OACRjC,UAAU,qBAFd,kBAGA,uBACIwB,KAAK,OACLzB,GAAG,OACHP,KAAK,OACL+B,MAAO/B,EACP4B,SAAU,SAAAC,GAAC,OAAIH,EAAa,CAAE1B,KAAM6B,EAAEC,OAAOC,SAC7CvB,UAAU,uBAEd,uBACIiC,QAAQ,WACRjC,UAAU,qBAFd,uBAGA,uBACIwB,KAAK,OACLzB,GAAG,WACHP,KAAK,WACL+B,MAAOf,EACPY,SAAU,SAAAC,GAAC,OAAIH,EAAa,CAAEV,SAAUa,EAAEC,OAAOC,SACjDvB,UAAU,uBAEd,uBACIiC,QAAQ,WACRjC,UAAU,qBAFd,sBAGA,uBACIwB,KAAK,SACLU,IAAI,IACJnC,GAAG,WACHP,KAAK,WACL+B,MAAOhB,EACPa,SAAU,SAAAC,GAAC,OAAIH,EAAa,CAAEX,SAAU4B,SAASd,EAAEC,OAAOC,QAAU,MACpEvB,UAAU,uBAEd,uBACIiC,QAAQ,eACRjC,UAAU,qBAFd,0BAGA,0BACIR,KAAK,eACLO,GAAG,eACHwB,MAAOd,EACPW,SAAU,SAAAC,GAAC,OAAIH,EAAa,CAAET,aAAcY,EAAEC,OAAOC,SACrDvB,UAAU,0BAGlB,uBACA,uBAAOA,UAAU,qBAAjB,yBACA,sBAAKA,UAAU,+BAAf,UACI,uCACA,yCACA,wBACCJ,EAAYC,KAAI,SAAAiC,GACb,OACI,cAACf,EAAD,CAEIjB,WAAYgC,EACZd,uBAAwBA,EACxBC,uBAAwBA,GAHnBa,EAAE/B,UAQvB,qBAAKC,UAAU,0CAAf,SACI,wBACAU,QAAS,kBAnFvB,WACE,IAAM0B,EAAgB,CACpBrC,GAAIsC,cACJ7C,KAAM,GACNC,OAAQ,IAEVyB,EAAa,CAACtB,YAAW,sBAAOkB,EAAOlB,aAAd,CAA2BwC,MA6EzBE,IACftC,UAAU,mBAFV,iC,UCjGHI,EAAgBmC,IAAMC,gBAC7BC,EAAoB,2BAyE1B,IAAMC,EAAgB,CACpB,CACE3C,GAAI,EACJP,KAAM,gBACNe,SAAU,EACVC,SAAU,OACVC,aAAc,iEACdb,YAAa,CACX,CACEG,GAAI,EACJP,KAAM,UACNC,OAAQ,QAEV,CACEM,GAAI,EACJP,KAAM,OACNC,OAAQ,WAId,CACEM,GAAI,EACJP,KAAM,OACNe,SAAU,EACVC,SAAU,OACVC,aAAc,kDACdb,YAAa,CACX,CACEG,GAAI,EACJP,KAAM,OACNC,OAAQ,KAEV,CACEM,GAAI,EACJP,KAAM,OACNC,OAAQ,YAODkD,EAjHf,WACE,MAA8BC,mBAASF,GAAvC,mBAAO9B,EAAP,KAAgBiC,EAAhB,KACA,EAAgDD,qBAAhD,mBAAOE,EAAP,KAAyBC,EAAzB,KACMC,EAAiBpC,EAAQqC,MAAK,SAAAnC,GAAM,OAAIA,EAAOf,KAAO+C,KAG5DI,qBAAU,WACR,IAAMC,EAAaC,aAAaC,QAAQZ,IAAsB,GAC3C,OAAfU,GAAqBN,EAAWS,KAAKC,MAAMJ,MAC9C,IAGHD,qBAAU,WACRE,aAAaI,QAAQf,EAAmBa,KAAKG,UAAU7C,MACtD,CAACA,IAEJ,IAAM8C,EAAqB,CACzB7C,gBAWF,WACE,IAAM8C,EAAY,CAChB5D,GAAIsC,cACJ7C,KAAM,GACNe,SAAU,EACVC,SAAU,GACVC,aAAc,GACdb,YAAa,CACX,CACEG,GAAIsC,cACJ7C,KAAM,GACNC,OAAQ,MAIdsD,EAAoBY,EAAU5D,IAC9B8C,EAAW,GAAD,mBAAKjC,GAAL,CAAc+C,MA1BxB/C,UACAP,mBA6BF,SAA4BN,GACF,OAArB+C,GAA6BA,IAAqB/C,GACnDgD,OAAoBf,GAEtBa,EAAWjC,EAAQmB,QAAO,SAAAjB,GAAM,OAAIA,EAAOf,KAAOA,OAhClDO,mBAIF,SAA4BP,GAC1BgD,EAAoBhD,IAJpB2B,mBAmCF,SAA4B3B,EAAIe,GAC9B,IAAM8C,EAAU,YAAOhD,GACjBgB,EAAQgC,EAAW/B,WAAU,SAAAgC,GAAC,OAAIA,EAAE9D,KAAOA,KACjD6D,EAAWhC,GAASd,EACpB+B,EAAWe,KAGb,OACE,eAACxD,EAAc0D,SAAf,CAAwBvC,MAAOmC,EAA/B,UACE,cAAC/C,EAAD,IACCqC,GAAkB,cAACvB,EAAD,CAAoCX,OAAQkC,GAA3BA,EAAejD,QCtEzDgE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aea66800.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Ingredient({name, amount}) {\n    return (\n        <>\n            <span>{name}</span>\n            <span>{amount}</span>\n        </>\n    )\n}\n","import React from 'react'\nimport Ingredient from './Ingredient'\n\nexport default function IngredientList({ingredients}) {\n   const ingredientElements = ingredients.map(ingredient =>{\n       return(<Ingredient key={ingredient.id} {...ingredient}/>)\n   })\n    return (\n        <div className=\"ingredient-grid\">\n            {ingredientElements}\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport IngredientList from './Ingredients/IngredientList'\nimport { RecipeContext } from '../App'\n\nexport default function Recipe(props) {\n    const { handleRecipeDelete, handleRecipeSelect } = useContext(RecipeContext)\n    const { id, name, servings, cookTime, instructions, ingredients } = props\n\n    return (\n        <div className=\"recipe\">\n            <div className=\"recipe__header\">\n                <h1 className=\"recipe__title\">{name}</h1>\n                <div>\n                    <button\n                        className=\"btn btn--primary mr-1\"\n                        onClick={() => handleRecipeSelect(id)}\n                        >Edit</button>\n                    <button\n                        onClick={() => handleRecipeDelete(id)}\n                        className=\"btn btn--danger\">Delete</button>\n                </div>\n            </div>\n            <div className=\"recipe__row\">\n                <span className=\"recipe__label\">Cook Time:</span>\n                <span className=\"recipe__value\">{cookTime}</span>\n            </div>\n            <div className=\"recipe__row\">\n                <span className=\"recipe__label\">Servings:</span>\n                <span className=\"recipe__value\">{servings}</span>\n            </div>\n            <div className=\"recipe__row\">\n                <span className=\"recipe__label\">Instructions:</span>\n                <div className=\"recipe__value recipe__instructions recipe__value--indented\">\n                    {instructions}\n                </div>\n            </div>\n            <div className=\"recipe__row\">\n                <span className=\"recipe__label\">Ingredients:</span>\n                <div className=\"recipe__value\">\n                    <IngredientList ingredients={ingredients} />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport Recipe from './Recipe'\nimport { RecipeContext } from '../App'\n\nexport default function RecipeList() {\n    const { recipes, handleRecipeAdd } = useContext(RecipeContext)\n    return (\n        <>\n            <div className=\"recipe-list\">\n                {recipes.map(recipe => {\n                    return (\n                        <Recipe\n                            key={recipe.id}\n                            {...recipe}\n                        />\n                    )\n                })}\n                <div className=\"recipe-list__add-recipe-btn-container\">\n                    <button\n                        onClick={handleRecipeAdd}\n                        className=\"btn btn--primary\">Add Recipe</button>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function RecipeIngredientEdit({ handleIngredientChange, handleIngredientDelete, ingredient }) {\n\n    function handleChange(changes) {\n        handleIngredientChange(ingredient.id, { ...ingredient, ...changes })\n    }\n\n    return (\n        <>\n            <input\n                className=\"recipe-edit__input\"\n                onChange={e => handleChange({ name: e.target.value })}\n                value={ingredient.name}\n                type=\"text\" />\n\n            <input\n                className=\"recipe-edit__input\"\n                value={ingredient.amount}\n                onChange={e => handleChange({ amount: e.target.value })}\n                type=\"text\" />\n\n            <button\n            onClick={() => handleIngredientDelete(ingredient.id)}\n                className=\"btn btn--danger\">&times;</button>\n        </>\n    )\n}\n","import React, { useContext } from 'react'\nimport RecipeIngredientEdit from './RecipeIngredientEdit'\nimport { v4 as uuidv4 } from 'uuid';\nimport { RecipeContext } from \"../../App\"\n\nexport default function RecipeEdit({ recipe }) {\n    const { id, name, cookTime, servings, instructions, ingredients } = recipe\n    const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext)\n\n    function handleChange(changes) {\n        handleRecipeChange(id, { ...recipe, ...changes })\n    }\n\n    function handleIngredientChange(id, ingredient) {\n        const newIngredients = [...recipe.ingredients]\n        const index = newIngredients.findIndex(i => i.id === id)\n        newIngredients[index] = ingredient\n        handleChange({ ingredients: newIngredients })\n    }\n\n\n  function handleIngredientAdd(){\n    const newIngredient = { \n      id: uuidv4(),\n      name: \"\",\n      amount: \"\"\n    }\n    handleChange({ingredients : [...recipe.ingredients, newIngredient]})\n  }\n\n  function handleIngredientDelete(id){\n        handleChange({ingredients: recipe.ingredients.filter(i => i.id !== id)})\n  }\n    return (\n        <div className=\"recipe-edit\">\n            <div className=\"recipe-edit__remove-button-cont\">\n                <button\n                    onClick={() => handleRecipeSelect(undefined)}\n                    className=\"btn recipe-edit__remove-button\">&times;</button></div>\n            <div className=\"recipe-edit__details-grid\">\n                <label\n                    htmlFor=\"name\"\n                    className=\"recipe-edit__label\">Name</label>\n                <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    value={name}\n                    onChange={e => handleChange({ name: e.target.value })}\n                    className=\"recipe-edit__input\"\n                />\n                <label\n                    htmlFor=\"cookTime\"\n                    className=\"recipe-edit__label\">Cook Time</label>\n                <input\n                    type=\"text\"\n                    id=\"cookTime\"\n                    name=\"cookTime\"\n                    value={cookTime}\n                    onChange={e => handleChange({ cookTime: e.target.value })}\n                    className=\"recipe-edit__input\"\n                />\n                <label\n                    htmlFor=\"servings\"\n                    className=\"recipe-edit__label\">Servings</label>\n                <input\n                    type=\"number\"\n                    min=\"1\"\n                    id=\"servings\"\n                    name=\"servings\"\n                    value={servings}\n                    onChange={e => handleChange({ servings: parseInt(e.target.value) || '' })}\n                    className=\"recipe-edit__input\" />\n\n                <label\n                    htmlFor=\"instructions\"\n                    className=\"recipe-edit__label\">Instructions</label>\n                <textarea\n                    name=\"instructions\"\n                    id=\"instructions\"\n                    value={instructions}\n                    onChange={e => handleChange({ instructions: e.target.value })}\n                    className=\"recipe-edit__input\"\n                ></textarea>\n            </div>\n            <br />\n            <label className=\"recipe-edit__label\">Ingredients</label>\n            <div className=\"recipe-edit__ingredient-grid\">\n                <div>Name</div>\n                <div>Amount</div>\n                <div></div>\n                {ingredients.map(i => {\n                    return (\n                        <RecipeIngredientEdit\n                            key={i.id}\n                            ingredient={i}\n                            handleIngredientChange={handleIngredientChange}\n                            handleIngredientDelete={handleIngredientDelete}\n                        />\n                    )\n                })}\n            </div>\n            <div className=\"recipe-edit__add-ingredient-button-cont\">\n                <button \n                onClick={() => handleIngredientAdd()}\n                className=\"btn btn--primary\">Add Ingredient</button></div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport RecipeList from './components/RecipeList';\nimport RecipeEdit from './components/RecipeEdit/RecipeEdit';\nimport { v4 as uuidv4 } from 'uuid';\nimport './css/app.css'\n\nexport const RecipeContext = React.createContext()\nconst LOCAL_STORAGE_KEY = \"CookingWithReact.recipes\"\n\nfunction App() {\n  const [recipes, setRecipes] = useState(sampleRecipes)\n  const [selectedRecipeId, setSelectedRecipeId] = useState()\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId)\n  \n  // load recipes\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY) || []\n    if (recipeJSON !== null) setRecipes(JSON.parse(recipeJSON))\n  }, [])\n\n  // store recipes\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes))\n  }, [recipes])\n\n  const recipeContextValue = {\n    handleRecipeAdd,\n    recipes,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  }\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id)\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [\n        {\n          id: uuidv4(),\n          name: \"\",\n          amount: \"\"\n        }\n      ]\n    }\n    setSelectedRecipeId(newRecipe.id)\n    setRecipes([...recipes, newRecipe])\n  }\n\n\n  function handleRecipeDelete(id) {\n    if(selectedRecipeId !== null && selectedRecipeId === id){\n      setSelectedRecipeId(undefined)\n    }\n    setRecipes(recipes.filter(recipe => recipe.id !== id))\n  }\n\n  \n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes]\n    const index = newRecipes.findIndex(r => r.id === id)\n    newRecipes[index] = recipe\n    setRecipes(newRecipes)\n  }\n\n  return (\n    <RecipeContext.Provider value={recipeContextValue}>\n      <RecipeList />\n      {selectedRecipe && <RecipeEdit key={selectedRecipe.id} recipe={selectedRecipe} />}\n    </RecipeContext.Provider>\n  )\n}\n\nconst sampleRecipes = [\n  {\n    id: 1,\n    name: \"Plain Chicken\",\n    servings: 3,\n    cookTime: \"1.45\",\n    instructions: \"1. Put Salt on Chicken\\n2. Put Chicken on Oven\\n3. Eat Chicken\",\n    ingredients: [\n      {\n        id: 1,\n        name: \"Chicken\",\n        amount: \"1 kg\"\n      },\n      {\n        id: 2,\n        name: \"Salt\",\n        amount: \"1 Tbs\"\n      }\n    ]\n  },\n  {\n    id: 2,\n    name: \"Cake\",\n    servings: 4,\n    cookTime: \"1.30\",\n    instructions: \"1. Make Bater\\n2. Put Cake on Oven\\n3. Eat Cake\",\n    ingredients: [\n      {\n        id: 1,\n        name: \"Eggs\",\n        amount: \"5\"\n      },\n      {\n        id: 2,\n        name: \"Salt\",\n        amount: \"2 Tbs\"\n      }\n    ]\n  }\n]\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}